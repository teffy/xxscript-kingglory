--基于三套图色的自定义锚点算法
--功能：计算图像锚点位置，自动推导

--(x1,y1)(a1,b1)
--(x2,y2)(a2,b2)
--(x3,y3)(a3,b3)

--a1,b1为x1,y1坐标下的分辨率
--a2,b2为x2,y2坐标下的分辨率
--a3,b3为x3,y3坐标下的分辨率

--长形分辨率下
x1 = 964
y1 = 345
a1 = 2000
b1 = 1000
--方形分辨率下
x2 = 885
y2 = 795
a2 = 2000
b2 = 2000
--任意其他分辨率
x3 = 598
y3 = 249
a3 = 1280
b3 = 720

function 锚点计算公式(x1,y1,x2,y2,x3,y3,a1,b1,a2,b2,a3,b3)
	local s =-(b1*x2*y3 - b1*x3*y2 - b2*x1*y3 + b2*x3*y1 + b3*x1*y2 - b3*x2*y1)/(a1*b2*y3 - a1*b3*y2 - a2*b1*y3 + a2*b3*y1 + a3*b1*y2 - a3*b2*y1);
	local t =-(a1*x2*y3 - a1*x3*y2 - a2*x1*y3 + a2*x3*y1 + a3*x1*y2 - a3*x2*y1)/(a1*b2*x3 - a1*b3*x2 - a2*b1*x3 + a2*b3*x1 + a3*b1*x2 - a3*b2*x1);
	--(s,t)表示锚点位置，且s，t均在(0,1)之间
	sysLog('计算锚点的位置：'..s..','..t);
	return s,t
end

function 三图色找点算法(x1,y1,x2,y2,x3,y3,a1,b1,a2,b2,a3,b3,运行分辨率宽,运行分辨率高)
	--计算锚点位置
	s,t = 锚点计算公式(x1,y1,x2,y2,x3,y3,a1,b1,a2,b2,a3,b3)
	--有了锚点之后，怎么去适配呢？
	--计算宽高比
	--计算不同分辨率下的锚点的位置
	A1 = a1 * s;
	B1 = b1 * t;
	A2 = a2 * s;
	B2 = b2 * t;
	宽的占比11 = (x1 - A1)/a1;
	高的占比12 = (y1 - B1)/b1;
	宽的占比21 = (x2 - A2)/a2;
	高的占比22 = (y2 - B2)/b2;
	宽高比 = (x1 - A1)/(y1 - B1)
	--计算宽和高最大能填充到什么程度
	if math.abs(宽的占比11) > math.abs(宽的占比21) then
		宽的占比 = 宽的占比11
	else
		宽的占比 = 宽的占比21
	end
	if 	math.abs(高的占比12) > math.abs(高的占比22) then
		高的占比 = 高的占比12
	else
		高的占比 = 高的占比22
	end
	--给定一个分辨率下，坐标点位置计算
	width,height = 运行分辨率宽,运行分辨率高;
	理论宽 = width * 宽的占比;
	理论高 = height * 高的占比;
	理论宽高比 = 理论宽/理论高
	if math.abs(理论宽高比) > math.abs(宽高比) then
		实际高 = 理论高;
		实际宽 = 理论高 * 宽高比
	else
		实际宽 = 理论宽
		实际高 = 理论宽/宽高比;
	end
	新的锚点坐标X = width * s;
	新的锚点坐标Y = height * t;
	X =  新的锚点坐标X + 实际宽;
	Y =  新的锚点坐标Y + 实际高;
	return X,Y; --这个x，y是
end

--第一套图色是长方形、第二套为正方形，或者足够方，第三套随意
x,y = 三图色找点算法(819,91,1708,579,1749,335,1000,500,2000,2000,2048,1536,2000,1000)

sysLog('1280*720分辨率下，皇冠的点的位置是：'..(x + 250)..','..y)